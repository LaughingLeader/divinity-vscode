{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Divinity story log",
  "scopeName": "text.divinity.storylog",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.osiris",
          "match": "^(###|---|exec INIT|exec EXIT|exec global|DBase contents).*"
        },
        {
          "name": "comment.line.osiris",
          "match": "^(\\d-*>|>>>|exec)"
        },
        {
          "name": "comment.line.osiris",
          "match": "\\[[^\\]]*\\]"
        },
        {
          "name": "comment.line.osiris",
          "match": "RuleActionPart of THEN at line 0 fires. Rule variables:|Query returns:"
        },
        {
          "name": "comment.line.osiris",
          "match": "/\\d+ ignored .*"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "invalid.illegal.osiris",
          "match": "^\\*\\*\\* Query failed!.*"
        },
        {
          "name": "support.other.osiris",
          "match": "^\\*\\*\\*.*"
        },
        {
          "name": "keyword.control.osiris",
          "match": "(call|event|COsiris::Event)"
        },
        {
          "name": "support.type.osiris",
          "match": "\\([A-Z]+\\)"
        },
        {
          "name": "constant.numeric.osiris",
          "match": "\\b([+-]?[0-9]*\\.[0-9]*)|([+-]?[0-9]+)\\b"
        },
        {
          "name": "variable.parameter.osiris",
          "match": "\\b_[A-Za-z0-9_]*\\b"
        },
        {
          "name": "variable.other.db.osiris",
          "match": "\\bDB_[A-Za-z0-9_-]+\\b"
        },
        {
          "match": "\\b([A-Za-z_][A-Za-z0-9_]*)\\(",
          "captures": {
            "1": {
              "name": "entity.name.function.osiris"
            }
          }
        },
        {
          "name": "constant.character.osiris",
          "match": "\\b[A-Za-z0-9][A-Za-z0-9_-]*\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.osiris",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.osiris",
          "match": "\\\\."
        }
      ]
    }
  }
}
